name: CMake on multiple platforms for SDL3

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive  # Ensure submodules are checked out

    - name: Install Dependencies (Linux)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y libfreetype6-dev libharfbuzz-dev pkg-config \
                                ninja-build cmake libpng-dev zlib1g-dev \
                                libbz2-dev libbrotli-dev

    - name: Run CMake and Build (Linux)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        cmake -B build \
              -G Ninja \
              -DCMAKE_C_COMPILER=gcc \
              -DCMAKE_CXX_COMPILER=g++ \
              -DCMAKE_BUILD_TYPE=Release \
              -S .
        cmake --build build --config Release

    - name: Install Dependencies (macOS)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew update
        brew install freetype harfbuzz pkg-config \
                     ninja cmake libpng zlib bzip2 brotli

    - name: Run CMake and Build (macOS)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        cmake -B build \
              -G Ninja \
              -DCMAKE_C_COMPILER=clang \
              -DCMAKE_CXX_COMPILER=clang++ \
              -DCMAKE_BUILD_TYPE=Release \
              -S .
        cmake --build build --config Release
